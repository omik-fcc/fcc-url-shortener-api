'use strict';

var express = require('express');
var mongo = require('mongodb');
var shortId = require("shortid");
var validUrl = require("valid-url");
var bodyParser = require('body-parser');

var dbUrl = process.env.MONGOLAB_URI;

//var cors = require('cors');

var app = express();

// Basic Configuration 
var port = process.env.PORT || 3000;


//app.use(cors());
app.use(bodyParser.urlencoded({extended: true}));

app.use('/public', express.static(process.cwd() + '/public'));

app.get('/', function (req, res) {
  res.sendFile(process.cwd() + '/views/index.html');
});


// your first API endpoint... 
app.get("/api/hello", function (req, res) {
  res.json({
    greeting: 'hello API'
  });
});


// CREATE (POST) e.g.
// /api/shorturl/new/www.google.com

app.post("/api/shorturl/new", function (req, res) {
  var url = req.body["url"];
  //var url = req.params.original_url;
  console.log(url);
  //console.log("original_url: " + url);

  // check if its a valid (well formed) URL
  if (validUrl.isUri(url)) {

    // generate a shortID to pair with URL
    var shortenUrl = shortId.generate();

    // mongo magic, to insert new URL + short ID
    mongo.connect(dbUrl, function (err, db) {

      if (err) {
        res.json({
          error: "Outch! Something quite embarrassing happened... (DB Error)"
        });
      } else {
        var urlSack = db.collection("urlSack");
        urlSack.insert({
          original_url: url,
          shorten_url: shortenUrl
        });

        // forming response with URL + ShortID pair
        res.json({
          original_url: url,
          shorten_url: shortenUrl
        });
        db.close();
      };
    });

    // not a valid URL
  } else {
    res.json({
      error: "It doesn't look like anything to me"
    });
  };
});


// READ (GET)
// /api/shorturl/1 redirects to original url
app.get("/api/shorturl/:shorten_url", function (req, res) {


  // checking if shorten url is valid (at least generated by shortId)
  if (shortId.isValid(req.params.shorten_url)) {

    mongo.connect(dbUrl, function (err, db) {

      if (err) {

        res.json({
          error: "Outch! Something quite embarrassing happened... (DB Error)"
        });

      } else {
        var urlSack = db.collection("urlSack");

        var query = {
          shorten_url: req.params.shorten_url
        };

        urlSack.findOne(query, {
          original_url: 1,
          _id: 0
        }, function (err, result) {
          if (result != null) {
            res.redirect(result.original_url);
          } else {
            res.json({
              error: "Not found"
            });
          };
        });
      };
      db.close();
    });

  } else {
    res.json({
      error: "It doesn't look like anything to me"
    });
  };
});


app.listen(port, function () {
  console.log('Node.js listening at port:3000 ...');
});